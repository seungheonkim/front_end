{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://react-http-7ba38-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      await fetch('https://react-http-7ba38-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Send cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","items","totalQuantity","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"sources":["/Users/gimseungheon/Documents/front_project/React/Lecture/advanced-redux/src/store/cart-actions.js"],"sourcesContent":["import {uiActions} from \"./ui-slice\";\nimport {cartActions} from \"./cart-slice\";\n\nexport const fetchCartData = () => {\n    return async (dispatch) => {\n        const fetchData = async () => {\n            const response = await fetch('https://react-http-7ba38-default-rtdb.firebaseio.com/cart.json');\n\n            if (!response.ok) {\n                throw new Error('Could not fetch cart data!');\n            }\n\n            const data = await response.json();\n            return data;\n        }\n\n        try {\n            const cartData = await fetchData();\n            dispatch(cartActions.replaceCart({\n                items: cartData.items || [],\n                totalQuantity: cartData.totalQuantity,\n            }));\n        } catch (error) {\n            dispatch(uiActions.showNotification({\n                status: 'error',\n                title: 'Error!',\n                message: 'Sending cart data failed!',\n            }))\n        }\n    }\n}\n\nexport const sendCartData = (cart) => {\n    return async (dispatch) => {\n        dispatch(\n            uiActions.showNotification({\n                status: 'pending',\n                title: 'Sending...',\n                message: 'Sending cart data!',\n            }));\n\n        const sendRequest = async () => {\n            await fetch('https://react-http-7ba38-default-rtdb.firebaseio.com/cart.json', {\n                method: 'PUT',\n                body: JSON.stringify(cart),\n            });\n        };\n\n        try {\n            await sendRequest();\n\n            dispatch(\n                uiActions.showNotification({\n                    status: 'success',\n                    title: 'Success!',\n                    message: 'Send cart data successfully!',\n                }))\n\n        } catch (error) {\n            dispatch(uiActions.showNotification({\n                status: 'error',\n                title: 'Error!',\n                message: 'Sending cart data failed!',\n            }))\n        }\n\n    };\n}"],"mappings":"AAAA,SAAQA,SAAS,QAAO,YAAY;AACpC,SAAQC,WAAW,QAAO,cAAc;AAExC,OAAO,MAAMC,aAAa,GAAG,MAAM;EAC/B,OAAO,MAAOC,QAAQ,IAAK;IACvB,MAAMC,SAAS,GAAG,YAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAgE,CAAC;MAE9F,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MACjD;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAClC,OAAOD,IAAI;IACf,CAAC;IAED,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMP,SAAS,EAAE;MAClCD,QAAQ,CAACF,WAAW,CAACW,WAAW,CAAC;QAC7BC,KAAK,EAAEF,QAAQ,CAACE,KAAK,IAAI,EAAE;QAC3BC,aAAa,EAAEH,QAAQ,CAACG;MAC5B,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZZ,QAAQ,CAACH,SAAS,CAACgB,gBAAgB,CAAC;QAChCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,MAAOlB,QAAQ,IAAK;IACvBA,QAAQ,CACJH,SAAS,CAACgB,gBAAgB,CAAC;MACvBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACb,CAAC,CAAC,CAAC;IAEP,MAAMG,WAAW,GAAG,YAAY;MAC5B,MAAMhB,KAAK,CAAC,gEAAgE,EAAE;QAC1EiB,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;MAC7B,CAAC,CAAC;IACN,CAAC;IAED,IAAI;MACA,MAAMC,WAAW,EAAE;MAEnBnB,QAAQ,CACJH,SAAS,CAACgB,gBAAgB,CAAC;QACvBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IAEX,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACZZ,QAAQ,CAACH,SAAS,CAACgB,gBAAgB,CAAC;QAChCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACP;EAEJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}