{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nexport const INCREMENT = 'INCREMENT';\nexport const DECREMENT = 'DECREMENT';\nexport const INCREASE = 'INCREASE';\nexport const TOGGLE = 'TOGGLE';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      //state 를 자동으로 복제함\n      //state 불변성을 알아서 지켜준다!! 따라서 원본 자체를 변경하는 것처럼 작성해보여도 사실상 복제해서 하는 것\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter += action.payload;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n//항상 덮어쓰기 때문에 side effect 가 일어남\n// const counterReducer = (state = initialState, action) => {\n//     if (action.type === 'INCREMENT') {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter,\n//         }\n//     }\n//\n//     if (action.type === 'DECREMENT') {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter,\n//         }\n//     }\n//\n//     if (action.type === 'INCREASE') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter,\n//         }\n//     }\n//\n//     if (action.type === 'TOGGLE') {\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter,\n//         }\n//     }\n//\n//     return state;\n// };\n\n// const store = createStore(counterReducer);\n\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconst store = configureStore({\n  //reducer 들을 모두 모아서 store 에 전달함\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","INCREMENT","DECREMENT","INCREASE","TOGGLE","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggle","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","auth","counterActions","actions","authActions"],"sources":["/Users/gimseungheon/Documents/front_project/React/Lecture/Redux/src/store/index.js"],"sourcesContent":["import {configureStore, createSlice} from \"@reduxjs/toolkit\";\n\nexport const INCREMENT = 'INCREMENT';\nexport const DECREMENT = 'DECREMENT';\nexport const INCREASE = 'INCREASE';\nexport const TOGGLE = 'TOGGLE';\n\nconst initialCounterState = {counter: 0, showCounter: true};\n\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState: initialCounterState,\n    reducers: {\n        increment(state) {\n            //state 를 자동으로 복제함\n            //state 불변성을 알아서 지켜준다!! 따라서 원본 자체를 변경하는 것처럼 작성해보여도 사실상 복제해서 하는 것\n            state.counter++;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        increase(state, action) {\n            state.counter += action.payload;\n        },\n        toggle(state) {\n            state.showCounter = !state.showCounter;\n        },\n    }\n})\n\n//항상 덮어쓰기 때문에 side effect 가 일어남\n// const counterReducer = (state = initialState, action) => {\n//     if (action.type === 'INCREMENT') {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter,\n//         }\n//     }\n//\n//     if (action.type === 'DECREMENT') {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter,\n//         }\n//     }\n//\n//     if (action.type === 'INCREASE') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter,\n//         }\n//     }\n//\n//     if (action.type === 'TOGGLE') {\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter,\n//         }\n//     }\n//\n//     return state;\n// };\n\n// const store = createStore(counterReducer);\n\nconst initialAuthState = {\n    isAuthenticated: false\n}\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState: initialAuthState,\n    reducers: {\n        login(state) {\n            state.isAuthenticated = true;\n        },\n        logout(state) {\n            state.isAuthenticated = false;\n        }\n    }\n});\n\nconst store = configureStore({\n    //reducer 들을 모두 모아서 store 에 전달함\n    reducer: {\n        counter: counterSlice.reducer,\n        auth: authSlice.reducer\n    },\n});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;\n\n"],"mappings":"AAAA,SAAQA,cAAc,EAAEC,WAAW,QAAO,kBAAkB;AAE5D,OAAO,MAAMC,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,QAAQ,GAAG,UAAU;AAClC,OAAO,MAAMC,MAAM,GAAG,QAAQ;AAE9B,MAAMC,mBAAmB,GAAG;EAACC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAI,CAAC;AAE3D,MAAMC,YAAY,GAAGR,WAAW,CAAC;EAC7BS,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IACNC,SAAS,CAACC,KAAK,EAAE;MACb;MACA;MACAA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDQ,SAAS,CAACD,KAAK,EAAE;MACbA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDS,QAAQ,CAACF,KAAK,EAAEG,MAAM,EAAE;MACpBH,KAAK,CAACP,OAAO,IAAIU,MAAM,CAACC,OAAO;IACnC,CAAC;IACDC,MAAM,CAACL,KAAK,EAAE;MACVA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAMY,gBAAgB,GAAG;EACrBC,eAAe,EAAE;AACrB,CAAC;AAED,MAAMC,SAAS,GAAGrB,WAAW,CAAC;EAC1BS,IAAI,EAAE,MAAM;EACZC,YAAY,EAAES,gBAAgB;EAC9BR,QAAQ,EAAE;IACNW,KAAK,CAACT,KAAK,EAAE;MACTA,KAAK,CAACO,eAAe,GAAG,IAAI;IAChC,CAAC;IACDG,MAAM,CAACV,KAAK,EAAE;MACVA,KAAK,CAACO,eAAe,GAAG,KAAK;IACjC;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMI,KAAK,GAAGzB,cAAc,CAAC;EACzB;EACA0B,OAAO,EAAE;IACLnB,OAAO,EAAEE,YAAY,CAACiB,OAAO;IAC7BC,IAAI,EAAEL,SAAS,CAACI;EACpB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAME,cAAc,GAAGnB,YAAY,CAACoB,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAAO;AAC5C,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}