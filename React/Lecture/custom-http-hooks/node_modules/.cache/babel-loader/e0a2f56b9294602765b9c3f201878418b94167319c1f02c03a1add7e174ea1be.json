{"ast":null,"code":"var _jsxFileName = \"/Users/gimseungheon/Documents/front_project/React/Lecture/custom-http-hooks/src/components/NewTask/NewTask.js\",\n  _s = $RefreshSig$();\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttp from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewTask = props => {\n  _s();\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest\n  } = useHttp();\n  const enterTaskHandler = async taskText => {\n    sendTaskRequest({\n      url: 'https://react-http-7ba38-default-rtdb.firebaseio.com/tasks.json',\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        text: taskText\n      })\n    });\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://react-http-7ba38-default-rtdb.firebaseio.com/tasks.json', {\n        method: 'POST',\n        body: JSON.stringify({\n          text: taskText\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n      const data = await response.json();\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(NewTask, \"flyXDYo9XtD2xRwNing8LFiPUr4=\", false, function () {\n  return [useHttp];\n});\n_c = NewTask;\nexport default NewTask;\nvar _c;\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["Section","TaskForm","useHttp","NewTask","props","isLoading","error","sendRequest","sendTaskRequest","enterTaskHandler","taskText","url","method","headers","body","JSON","stringify","text","setIsLoading","setError","response","fetch","ok","Error","data","json","generatedId","name","createdTask","id","onAddTask","err","message"],"sources":["/Users/gimseungheon/Documents/front_project/React/Lecture/custom-http-hooks/src/components/NewTask/NewTask.js"],"sourcesContent":["import Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttp from \"../../hooks/use-http\";\n\nconst NewTask = (props) => {\n    const {isLoading, error, sendRequest: sendTaskRequest} = useHttp();\n\n    const enterTaskHandler = async (taskText) => {\n        sendTaskRequest({\n            url: 'https://react-http-7ba38-default-rtdb.firebaseio.com/tasks.json',\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({text: taskText}),\n        });\n        setIsLoading(true);\n        setError(null);\n        try {\n            const response = await fetch(\n                'https://react-http-7ba38-default-rtdb.firebaseio.com/tasks.json',\n                {\n                    method: 'POST',\n                    body: JSON.stringify({text: taskText}),\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                }\n            );\n\n            if (!response.ok) {\n                throw new Error('Request failed!');\n            }\n\n            const data = await response.json();\n\n            const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n            const createdTask = {id: generatedId, text: taskText};\n\n            props.onAddTask(createdTask);\n        } catch (err) {\n            setError(err.message || 'Something went wrong!');\n        }\n        setIsLoading(false);\n    };\n\n    return (\n        <Section>\n            <TaskForm onEnterTask={enterTaskHandler} loading={isLoading}/>\n            {error && <p>{error}</p>}\n        </Section>\n    );\n};\n\nexport default NewTask;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,eAAe;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,sBAAsB;AAAC;AAE3C,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAA;EACvB,MAAM;IAACC,SAAS;IAAEC,KAAK;IAAEC,WAAW,EAAEC;EAAe,CAAC,GAAGN,OAAO,EAAE;EAElE,MAAMO,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IACzCF,eAAe,CAAC;MACZG,GAAG,EAAE,iEAAiE;MACtEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACC,IAAI,EAAEP;MAAQ,CAAC;IACzC,CAAC,CAAC;IACFQ,YAAY,CAAC,IAAI,CAAC;IAClBC,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,iEAAiE,EACjE;QACIT,MAAM,EAAE,MAAM;QACdE,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACC,IAAI,EAAEP;QAAQ,CAAC,CAAC;QACtCG,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CACJ;MAED,IAAI,CAACO,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACtC;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAElC,MAAMC,WAAW,GAAGF,IAAI,CAACG,IAAI,CAAC,CAAC;MAC/B,MAAMC,WAAW,GAAG;QAACC,EAAE,EAAEH,WAAW;QAAET,IAAI,EAAEP;MAAQ,CAAC;MAErDN,KAAK,CAAC0B,SAAS,CAACF,WAAW,CAAC;IAChC,CAAC,CAAC,OAAOG,GAAG,EAAE;MACVZ,QAAQ,CAACY,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IACpD;IACAd,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACI,QAAC,OAAO;IAAA,wBACJ,QAAC,QAAQ;MAAC,WAAW,EAAET,gBAAiB;MAAC,OAAO,EAAEJ;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,EAC7DC,KAAK,iBAAI;MAAA,UAAIA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAClB;AAElB,CAAC;AAAC,GAhDIH,OAAO;EAAA,QACgDD,OAAO;AAAA;AAAA,KAD9DC,OAAO;AAkDb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}