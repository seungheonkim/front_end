{"ast":null,"code":"var _jsxFileName = \"/Users/gimseungheon/Documents/front_project/React/Lecture/form-user-input/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim().length !== 0);\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.trim().includes('@');\n  const emailInputIsInValid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const nameInputHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const emailInputHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const nameInputBlurHandler = () => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputBlurHandler = () => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    //상태를 유지하기 위해 새로고침 방지\n    event.preventDefault();\n\n    //form의 제출버튼 클릭시 무조건 input 창을 접근한 것으로 인식하기 때문에 true 로 상태 변경\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n    if (!formIsValid) {\n      return;\n    }\n    console.log(`from state: ${enteredName}`);\n    console.log(`from state: ${enteredEmail}`);\n    setEnteredName('');\n    setEnteredNameTouched(false);\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInValid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: 'error-text',\n        children: \"Name must not be empty!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), emailInputIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: 'error-text',\n        children: \"Email must includes @!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(SimpleInput, \"h7fyNOed/TXpDlinop+8JIYyqEw=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangedHandler","inputBlurHandler","nameBlurHandler","trim","length","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","includes","emailInputIsInValid","formIsValid","nameInputHandler","event","setEnteredName","target","emailInputHandler","nameInputBlurHandler","setEnteredNameTouched","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","nameInputIsInvalid","emailInputClasses"],"sources":["/Users/gimseungheon/Documents/front_project/React/Lecture/form-user-input/src/components/SimpleInput.js"],"sourcesContent":["import {useState} from \"react\";\n\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n    const {\n        value: enteredName,\n        isValid: enteredNameIsValid,\n        hasError: nameInputHasError,\n        valueChangeHandler: nameChangedHandler,\n        inputBlurHandler: nameBlurHandler\n    } = useInput((value) => value.trim().length !== 0);\n\n    const [enteredEmail, setEnteredEmail] = useState('');\n    const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n    const enteredEmailIsValid = enteredEmail.trim().includes('@');\n    const emailInputIsInValid = !enteredEmailIsValid && enteredEmailTouched;\n\n    let formIsValid = false;\n\n    if (enteredNameIsValid && enteredEmailIsValid) {\n        formIsValid = true;\n    }\n\n    const nameInputHandler = (event) => {\n        setEnteredName(event.target.value);\n    };\n\n    const emailInputHandler = (event) => {\n        setEnteredEmail(event.target.value);\n    };\n\n    const nameInputBlurHandler = () => {\n        setEnteredNameTouched(true);\n    };\n\n    const emailInputBlurHandler = () => {\n        setEnteredEmailTouched(true);\n    };\n\n    const formSubmissionHandler = (event) => {\n        //상태를 유지하기 위해 새로고침 방지\n        event.preventDefault();\n\n        //form의 제출버튼 클릭시 무조건 input 창을 접근한 것으로 인식하기 때문에 true 로 상태 변경\n        setEnteredNameTouched(true);\n        setEnteredEmailTouched(true);\n\n        if (!formIsValid) {\n            return;\n        }\n\n        console.log(`from state: ${enteredName}`);\n        console.log(`from state: ${enteredEmail}`);\n\n        setEnteredName('');\n        setEnteredNameTouched(false);\n\n        setEnteredEmail('');\n        setEnteredEmailTouched(false);\n    };\n\n    const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n    const emailInputClasses = emailInputIsInValid ? 'form-control invalid' : 'form-control';\n\n    return (\n        <form onSubmit={formSubmissionHandler}>\n            <div className={nameInputClasses}>\n                <label htmlFor='name'>Your Name</label>\n                <input\n                    type='text'\n                    id='name'\n                    onChange={nameInputHandler}\n                    onBlur={nameInputBlurHandler}\n                    value={enteredName}\n                />\n                {nameInputIsInvalid && <p className={'error-text'}>Name must not be empty!!</p>}\n            </div>\n            <div className={emailInputClasses}>\n                <label htmlFor='name'>Your Email</label>\n                <input\n                    type='email'\n                    id='email'\n                    onChange={emailInputHandler}\n                    onBlur={emailInputBlurHandler}\n                    value={enteredEmail}\n                />\n                {emailInputIsInValid && <p className={'error-text'}>Email must includes @!!</p>}\n            </div>\n            <div className=\"form-actions\">\n                <button disabled={!formIsValid}>Submit</button>\n            </div>\n        </form>\n    );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}