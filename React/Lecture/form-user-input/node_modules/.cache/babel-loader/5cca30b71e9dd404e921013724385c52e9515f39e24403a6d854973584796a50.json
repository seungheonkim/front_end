{"ast":null,"code":"var _jsxFileName = \"/Users/gimseungheon/Documents/front_project/React/Lecture/form-user-input/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim().length !== 0);\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.trim().includes('@'));\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const formSubmissionHandler = event => {\n    //상태를 유지하기 위해 새로고침 방지\n    event.preventDefault();\n    if (!formIsValid) {\n      return;\n    }\n    console.log(`from state: ${enteredName}`);\n    console.log(`from state: ${enteredEmail}`);\n    resetNameInput();\n    resetEmailInput();\n  };\n  const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangedHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: 'error-text',\n        children: \"Name must not be empty!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangedHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: 'error-text',\n        children: \"Email must includes @!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(SimpleInput, \"TxKiUvGA7gZ70KKOHllT+LeIvic=\", false, function () {\n  return [useInput, useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useInput","SimpleInput","props","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangedHandler","inputBlurHandler","nameBlurHandler","reset","resetNameInput","trim","length","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangedHandler","emailBlurHandler","resetEmailInput","includes","formIsValid","formSubmissionHandler","event","preventDefault","console","log","nameInputClasses","emailInputClasses"],"sources":["/Users/gimseungheon/Documents/front_project/React/Lecture/form-user-input/src/components/SimpleInput.js"],"sourcesContent":["import useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n    const {\n        value: enteredName,\n        isValid: enteredNameIsValid,\n        hasError: nameInputHasError,\n        valueChangeHandler: nameChangedHandler,\n        inputBlurHandler: nameBlurHandler,\n        reset: resetNameInput\n    } = useInput((value) => value.trim().length !== 0);\n\n    const {\n        value: enteredEmail,\n        isValid: enteredEmailIsValid,\n        hasError: emailInputHasError,\n        valueChangeHandler: emailChangedHandler,\n        inputBlurHandler: emailBlurHandler,\n        reset: resetEmailInput\n    } = useInput((value) => value.trim().includes('@'));\n\n    let formIsValid = false;\n\n    if (enteredNameIsValid && enteredEmailIsValid) {\n        formIsValid = true;\n    }\n\n    const formSubmissionHandler = (event) => {\n        //상태를 유지하기 위해 새로고침 방지\n        event.preventDefault();\n\n        if (!formIsValid) {\n            return;\n        }\n\n        console.log(`from state: ${enteredName}`);\n        console.log(`from state: ${enteredEmail}`);\n\n        resetNameInput();\n        resetEmailInput();\n    };\n\n    const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n    const emailInputClasses = emailInputHasError ? 'form-control invalid' : 'form-control';\n\n    return (\n        <form onSubmit={formSubmissionHandler}>\n            <div className={nameInputClasses}>\n                <label htmlFor='name'>Your Name</label>\n                <input\n                    type='text'\n                    id='name'\n                    onChange={nameChangedHandler}\n                    onBlur={nameBlurHandler}\n                    value={enteredName}\n                />\n                {nameInputHasError && <p className={'error-text'}>Name must not be empty!!</p>}\n            </div>\n            <div className={emailInputClasses}>\n                <label htmlFor='name'>Your Email</label>\n                <input\n                    type='email'\n                    id='email'\n                    onChange={emailChangedHandler}\n                    onBlur={emailBlurHandler}\n                    value={enteredEmail}\n                />\n                {emailInputHasError && <p className={'error-text'}>Email must includes @!!</p>}\n            </div>\n            <div className=\"form-actions\">\n                <button disabled={!formIsValid}>Submit</button>\n            </div>\n        </form>\n    );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,oBAAoB;AAAC;AAE1C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC3B,MAAM;IACFC,KAAK,EAAEC,WAAW;IAClBC,OAAO,EAAEC,kBAAkB;IAC3BC,QAAQ,EAAEC,iBAAiB;IAC3BC,kBAAkB,EAAEC,kBAAkB;IACtCC,gBAAgB,EAAEC,eAAe;IACjCC,KAAK,EAAEC;EACX,CAAC,GAAGd,QAAQ,CAAEG,KAAK,IAAKA,KAAK,CAACY,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,CAAC;EAElD,MAAM;IACFb,KAAK,EAAEc,YAAY;IACnBZ,OAAO,EAAEa,mBAAmB;IAC5BX,QAAQ,EAAEY,kBAAkB;IAC5BV,kBAAkB,EAAEW,mBAAmB;IACvCT,gBAAgB,EAAEU,gBAAgB;IAClCR,KAAK,EAAES;EACX,CAAC,GAAGtB,QAAQ,CAAEG,KAAK,IAAKA,KAAK,CAACY,IAAI,EAAE,CAACQ,QAAQ,CAAC,GAAG,CAAC,CAAC;EAEnD,IAAIC,WAAW,GAAG,KAAK;EAEvB,IAAIlB,kBAAkB,IAAIY,mBAAmB,EAAE;IAC3CM,WAAW,GAAG,IAAI;EACtB;EAEA,MAAMC,qBAAqB,GAAIC,KAAK,IAAK;IACrC;IACAA,KAAK,CAACC,cAAc,EAAE;IAEtB,IAAI,CAACH,WAAW,EAAE;MACd;IACJ;IAEAI,OAAO,CAACC,GAAG,CAAE,eAAczB,WAAY,EAAC,CAAC;IACzCwB,OAAO,CAACC,GAAG,CAAE,eAAcZ,YAAa,EAAC,CAAC;IAE1CH,cAAc,EAAE;IAChBQ,eAAe,EAAE;EACrB,CAAC;EAED,MAAMQ,gBAAgB,GAAGtB,iBAAiB,GAAG,sBAAsB,GAAG,cAAc;EACpF,MAAMuB,iBAAiB,GAAGZ,kBAAkB,GAAG,sBAAsB,GAAG,cAAc;EAEtF,oBACI;IAAM,QAAQ,EAAEM,qBAAsB;IAAA,wBAClC;MAAK,SAAS,EAAEK,gBAAiB;MAAA,wBAC7B;QAAO,OAAO,EAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eACvC;QACI,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,MAAM;QACT,QAAQ,EAAEpB,kBAAmB;QAC7B,MAAM,EAAEE,eAAgB;QACxB,KAAK,EAAER;MAAY;QAAA;QAAA;QAAA;MAAA,QACrB,EACDI,iBAAiB,iBAAI;QAAG,SAAS,EAAE,YAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA6B;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5E,eACN;MAAK,SAAS,EAAEuB,iBAAkB;MAAA,wBAC9B;QAAO,OAAO,EAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB,eACxC;QACI,IAAI,EAAC,OAAO;QACZ,EAAE,EAAC,OAAO;QACV,QAAQ,EAAEX,mBAAoB;QAC9B,MAAM,EAAEC,gBAAiB;QACzB,KAAK,EAAEJ;MAAa;QAAA;QAAA;QAAA;MAAA,QACtB,EACDE,kBAAkB,iBAAI;QAAG,SAAS,EAAE,YAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA4B;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5E,eACN;MAAK,SAAS,EAAC,cAAc;MAAA,uBACzB;QAAQ,QAAQ,EAAE,CAACK,WAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAgB;MAAA;MAAA;MAAA;IAAA,QAC7C;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEf,CAAC;AAAC,GAxEIvB,WAAW;EAAA,QAQTD,QAAQ,EASRA,QAAQ;AAAA;AAAA,KAjBVC,WAAW;AA0EjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}