{"ast":null,"code":"var _jsxFileName = \"/Users/gimseungheon/Documents/front_project/React/Lecture/form-user-input/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState('');\n  //input 창을 건드렸는지 여부\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim().length !== 0;\n  const nameInputHandler = event => {\n    if (enteredNameIsValid) {\n      setEnteredName(event.target.value);\n    }\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n    if (enteredName.trim().length === 0) {\n      setEnteredNameIsValid(false);\n      return;\n    }\n  };\n  const formSubmissionHandler = event => {\n    //상태를 유지하기 위해 새로고침 방지\n    event.preventDefault();\n\n    //form의 제출버튼 클릭시 무조건 input 창을 접근한 것으로 인식하기 때문에 true 로 상태 변경\n    setEnteredNameTouched(true);\n    if (enteredName.trim().length === 0) {\n      setEnteredNameIsValid(false);\n      return;\n    }\n    setEnteredNameIsValid(true);\n    console.log(`from state: ${enteredName}`);\n    setEnteredName('');\n  };\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: 'error-text',\n        children: \"Name must not be empty!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(SimpleInput, \"VUm+G9YkVtHi/Fjk92HS4+x5TZ8=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","trim","length","nameInputHandler","event","target","value","nameInputBlurHandler","setEnteredNameIsValid","formSubmissionHandler","preventDefault","console","log","nameInputIsInvalid","nameInputClasses"],"sources":["/Users/gimseungheon/Documents/front_project/React/Lecture/form-user-input/src/components/SimpleInput.js"],"sourcesContent":["import {useState} from \"react\";\n\nconst SimpleInput = (props) => {\n    const [enteredName, setEnteredName] = useState('');\n    //input 창을 건드렸는지 여부\n    const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n    const enteredNameIsValid = enteredName.trim().length !== 0;\n\n    const nameInputHandler = (event) => {\n        if (enteredNameIsValid) {\n            setEnteredName(event.target.value);\n        }\n    };\n\n    const nameInputBlurHandler = (event) => {\n        setEnteredNameTouched(true);\n\n        if (enteredName.trim().length === 0) {\n            setEnteredNameIsValid(false);\n            return;\n        }\n    };\n\n    const formSubmissionHandler = (event) => {\n        //상태를 유지하기 위해 새로고침 방지\n        event.preventDefault();\n\n        //form의 제출버튼 클릭시 무조건 input 창을 접근한 것으로 인식하기 때문에 true 로 상태 변경\n        setEnteredNameTouched(true);\n\n        if (enteredName.trim().length === 0) {\n            setEnteredNameIsValid(false);\n            return;\n        }\n\n        setEnteredNameIsValid(true);\n\n        console.log(`from state: ${enteredName}`);\n        setEnteredName('');\n    };\n\n    const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n    const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n\n    return (\n        <form onSubmit={formSubmissionHandler}>\n            <div className={nameInputClasses}>\n                <label htmlFor='name'>Your Name</label>\n                <input\n                    type='text'\n                    id='name'\n                    onChange={nameInputHandler}\n                    onBlur={nameInputBlurHandler}\n                    value={enteredName}\n                />\n                {nameInputIsInvalid && <p className={'error-text'}>Name must not be empty!!</p>}\n            </div>\n            <div className=\"form-actions\">\n                <button>Submit</button>\n            </div>\n        </form>\n    );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAC;AAE/B,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAClD;EACA,MAAM,CAACK,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAMO,kBAAkB,GAAGJ,WAAW,CAACK,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC;EAE1D,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAChC,IAAIJ,kBAAkB,EAAE;MACpBH,cAAc,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACtC;EACJ,CAAC;EAED,MAAMC,oBAAoB,GAAIH,KAAK,IAAK;IACpCL,qBAAqB,CAAC,IAAI,CAAC;IAE3B,IAAIH,WAAW,CAACK,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAE;MACjCM,qBAAqB,CAAC,KAAK,CAAC;MAC5B;IACJ;EACJ,CAAC;EAED,MAAMC,qBAAqB,GAAIL,KAAK,IAAK;IACrC;IACAA,KAAK,CAACM,cAAc,EAAE;;IAEtB;IACAX,qBAAqB,CAAC,IAAI,CAAC;IAE3B,IAAIH,WAAW,CAACK,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAE;MACjCM,qBAAqB,CAAC,KAAK,CAAC;MAC5B;IACJ;IAEAA,qBAAqB,CAAC,IAAI,CAAC;IAE3BG,OAAO,CAACC,GAAG,CAAE,eAAchB,WAAY,EAAC,CAAC;IACzCC,cAAc,CAAC,EAAE,CAAC;EACtB,CAAC;EAED,MAAMgB,kBAAkB,GAAG,CAACb,kBAAkB,IAAIF,kBAAkB;EAEpE,MAAMgB,gBAAgB,GAAGD,kBAAkB,GAAG,sBAAsB,GAAG,cAAc;EAErF,oBACI;IAAM,QAAQ,EAAEJ,qBAAsB;IAAA,wBAClC;MAAK,SAAS,EAAEK,gBAAiB;MAAA,wBAC7B;QAAO,OAAO,EAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eACvC;QACI,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,MAAM;QACT,QAAQ,EAAEX,gBAAiB;QAC3B,MAAM,EAAEI,oBAAqB;QAC7B,KAAK,EAAEX;MAAY;QAAA;QAAA;QAAA;MAAA,QACrB,EACDiB,kBAAkB,iBAAI;QAAG,SAAS,EAAE,YAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA6B;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7E,eACN;MAAK,SAAS,EAAC,cAAc;MAAA,uBACzB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAuB;MAAA;MAAA;MAAA;IAAA,QACrB;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEf,CAAC;AAAC,GA9DInB,WAAW;AAAA,KAAXA,WAAW;AAgEjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}