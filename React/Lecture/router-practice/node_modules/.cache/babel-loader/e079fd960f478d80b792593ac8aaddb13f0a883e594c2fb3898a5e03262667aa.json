{"ast":null,"code":"var _jsxFileName = \"/Users/gimseungheon/Documents/front_project/React/Lecture/router-practice/src/components/comments/Comments.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler = () => {};\n  let comments;\n  if (status === 'pending') {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'centered',\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 20\n    }, this);\n  }\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: 'centered',\n      children: \"No Comments Entered yet!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: quoteId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }, this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Comments, \"UhutHWblW7V3IC7CYBhRN+7PvgE=\", false, function () {\n  return [useParams, useHttp];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useEffect","useState","classes","NewCommentForm","useParams","useHttp","getAllComments","LoadingSpinner","CommentsList","Comments","isAddingComment","setIsAddingComment","params","quoteId","sendRequest","status","data","loadedComments","startAddCommentHandler","addedCommentHandler","comments","length"],"sources":["/Users/gimseungheon/Documents/front_project/React/Lecture/router-practice/src/components/comments/Comments.js"],"sourcesContent":["import {useEffect, useState} from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport {useParams} from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport {getAllComments} from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n    const [isAddingComment, setIsAddingComment] = useState(false);\n    const params = useParams();\n    const {quoteId} = params;\n\n    const {sendRequest, status, data: loadedComments} = useHttp(getAllComments);\n\n    useEffect(() => {\n        sendRequest(quoteId);\n    }, [sendRequest, quoteId]);\n\n    const startAddCommentHandler = () => {\n        setIsAddingComment(true);\n    };\n\n    const addedCommentHandler = () => {\n\n    };\n\n    let comments;\n\n    if (status === 'pending') {\n        comments = (\n            <div className={'centered'}>\n                <LoadingSpinner/>\n            </div>\n        )\n    }\n\n    if (status === 'completed' && (loadedComments && loadedComments.length > 0)) {\n        comments = <CommentsList comments={loadedComments}/>\n    }\n\n    if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n        comments = (\n            <p className={'centered'}>\n                No Comments Entered yet!!\n            </p>\n        )\n    }\n\n    return (\n        <section className={classes.comments}>\n            <h2>User Comments</h2>\n            {!isAddingComment && (\n                <button className='btn' onClick={startAddCommentHandler}>\n                    Add a Comment\n                </button>\n            )}\n            {isAddingComment && <NewCommentForm quoteId={quoteId} onAddedComment={addedCommentHandler}/>}\n            {comments}\n        </section>\n    );\n};\n\nexport default Comments;\n"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEzC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAAQC,cAAc,QAAO,eAAe;AAC5C,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,YAAY,MAAM,gBAAgB;AAAC;AAE1C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMW,MAAM,GAAGR,SAAS,EAAE;EAC1B,MAAM;IAACS;EAAO,CAAC,GAAGD,MAAM;EAExB,MAAM;IAACE,WAAW;IAAEC,MAAM;IAAEC,IAAI,EAAEC;EAAc,CAAC,GAAGZ,OAAO,CAACC,cAAc,CAAC;EAE3EN,SAAS,CAAC,MAAM;IACZc,WAAW,CAACD,OAAO,CAAC;EACxB,CAAC,EAAE,CAACC,WAAW,EAAED,OAAO,CAAC,CAAC;EAE1B,MAAMK,sBAAsB,GAAG,MAAM;IACjCP,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMQ,mBAAmB,GAAG,MAAM,CAElC,CAAC;EAED,IAAIC,QAAQ;EAEZ,IAAIL,MAAM,KAAK,SAAS,EAAE;IACtBK,QAAQ,gBACJ;MAAK,SAAS,EAAE,UAAW;MAAA,uBACvB,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAExB;EACL;EAEA,IAAIL,MAAM,KAAK,WAAW,IAAKE,cAAc,IAAIA,cAAc,CAACI,MAAM,GAAG,CAAE,EAAE;IACzED,QAAQ,gBAAG,QAAC,YAAY;MAAC,QAAQ,EAAEH;IAAe;MAAA;MAAA;MAAA;IAAA,QAAE;EACxD;EAEA,IAAIF,MAAM,KAAK,WAAW,KAAK,CAACE,cAAc,IAAIA,cAAc,CAACI,MAAM,KAAK,CAAC,CAAC,EAAE;IAC5ED,QAAQ,gBACJ;MAAG,SAAS,EAAE,UAAW;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAG5B;EACL;EAEA,oBACI;IAAS,SAAS,EAAElB,OAAO,CAACkB,QAAS;IAAA,wBACjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,EACrB,CAACV,eAAe,iBACb;MAAQ,SAAS,EAAC,KAAK;MAAC,OAAO,EAAEQ,sBAAuB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAG3D,EACAR,eAAe,iBAAI,QAAC,cAAc;MAAC,OAAO,EAAEG,OAAQ;MAAC,cAAc,EAAEM;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAE,EAC3FC,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAElB,CAAC;AAAC,GArDIX,QAAQ;EAAA,QAEKL,SAAS,EAG4BC,OAAO;AAAA;AAAA,KALzDI,QAAQ;AAuDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}