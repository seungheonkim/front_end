{"ast":null,"code":"var _jsxFileName = \"/Users/gimseungheon/Documents/front_project/React/Lecture/router-practice/src/components/quotes/QuoteForm.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useRef, useState } from 'react';\nimport ReactRouterPrompt from \"react-router-prompt\";\nimport Modal from 'react-modal';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuoteForm = props => {\n  _s();\n  const [isEntered, setIsEntered] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  function submitFormHandler(event) {\n    event.preventDefault();\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({\n      author: enteredAuthor,\n      text: enteredText\n    });\n  }\n  ;\n  const finishEnteringHandler = () => {\n    setIsEntered(false);\n  };\n  const formFocusedHandler = () => {\n    setIsEntered(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ReactRouterPrompt, {\n      when: isEntered,\n      children: [_ref => {\n        let {\n          isActive,\n          onConfirm,\n          onCancel\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Modal, {\n          show: isActive,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Do you really want to leave?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"All your data will be lost!!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onCancel,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onConfirm,\n              children: \"Ok\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this);\n      }, /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onFocus: formFocusedHandler,\n          className: classes.form,\n          onSubmit: submitFormHandler,\n          children: [props.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.loading,\n            children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"author\",\n              children: \"Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"author\",\n              ref: authorInputRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"text\",\n              children: \"Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"text\",\n              rows: \"5\",\n              ref: textInputRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.actions,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: finishEnteringHandler,\n              children: \"Add Quote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(QuoteForm, \"iW++gmQ1zYp82ZxDhijA2Nrq8YA=\");\n_c = QuoteForm;\nexport default QuoteForm;\nvar _c;\n$RefreshReg$(_c, \"QuoteForm\");","map":{"version":3,"names":["Fragment","useRef","useState","ReactRouterPrompt","Modal","Card","LoadingSpinner","classes","QuoteForm","props","isEntered","setIsEntered","authorInputRef","textInputRef","submitFormHandler","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","finishEnteringHandler","formFocusedHandler","isActive","onConfirm","onCancel","form","isLoading","loading","control","actions"],"sources":["/Users/gimseungheon/Documents/front_project/React/Lecture/router-practice/src/components/quotes/QuoteForm.js"],"sourcesContent":["import {Fragment, useRef, useState} from 'react';\nimport ReactRouterPrompt from \"react-router-prompt\";\nimport Modal from 'react-modal';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n    const [isEntered, setIsEntered] = useState(false);\n    const authorInputRef = useRef();\n    const textInputRef = useRef();\n\n    function submitFormHandler(event) {\n        event.preventDefault();\n\n        const enteredAuthor = authorInputRef.current.value;\n        const enteredText = textInputRef.current.value;\n\n        // optional: Could validate here\n\n        props.onAddQuote({author: enteredAuthor, text: enteredText});\n    };\n\n    const finishEnteringHandler = () => {\n        setIsEntered(false);\n    }\n\n    const formFocusedHandler = () => {\n        setIsEntered(true);\n    }\n\n    return (\n        <Fragment>\n            <ReactRouterPrompt when={isEntered}>\n                {({ isActive, onConfirm, onCancel }) => (\n                    <Modal show={isActive}>\n                        <div>\n                            <p>Do you really want to leave?</p>\n                            <p>All your data will be lost!!</p>\n                            <button onClick={onCancel}>Cancel</button>\n                            <button onClick={onConfirm}>Ok</button>\n                        </div>\n                    </Modal>\n                )}\n                <Card>\n                    <form onFocus={formFocusedHandler} className={classes.form} onSubmit={submitFormHandler}>\n                        {props.isLoading && (\n                            <div className={classes.loading}>\n                                <LoadingSpinner/>\n                            </div>\n                        )}\n\n                        <div className={classes.control}>\n                            <label htmlFor='author'>Author</label>\n                            <input type='text' id='author' ref={authorInputRef}/>\n                        </div>\n                        <div className={classes.control}>\n                            <label htmlFor='text'>Text</label>\n                            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n                        </div>\n                        <div className={classes.actions}>\n                            <button className='btn' onClick={finishEnteringHandler}>Add Quote</button>\n                        </div>\n                    </form>\n                </Card>\n            </ReactRouterPrompt>\n\n\n        </Fragment>\n    );\n};\n\nexport default QuoteForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}