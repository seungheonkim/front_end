{"ast":null,"code":"var _jsxFileName = \"/Users/gimseungheon/Documents/front_project/React/Lecture/section12/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport './App.css';\nimport Button from \"./components/UI/Button/Button\";\nimport DemoOutput from \"./components/Demo/DemoOutput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showPara, setShowPara] = useState(false);\n  const [allowToggle, setAllowToggle] = useState(false);\n  console.log('App Running!!');\n\n  //save a function to reuse it without re-rendering\n  const toggleParagraphHandler = useCallback(() => {\n    if (allowToggle) {\n      setShowPara(prevShowPara => !prevShowPara);\n    }\n  }, []);\n  const allowToggleHandler = () => {\n    setAllowToggle(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi there!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DemoOutput, {\n      show: showPara\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: allowToggleHandler,\n      children: \"Allow Toggling\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleParagraphHandler,\n      children: \"Show Paragraph!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"kaO2OpeyXqGItmTmDCQtIyCT6ww=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useState","Button","DemoOutput","App","showPara","setShowPara","allowToggle","setAllowToggle","console","log","toggleParagraphHandler","prevShowPara","allowToggleHandler"],"sources":["/Users/gimseungheon/Documents/front_project/React/Lecture/section12/src/App.js"],"sourcesContent":["import React, {useCallback, useState} from 'react';\n\nimport './App.css';\nimport Button from \"./components/UI/Button/Button\";\nimport DemoOutput from \"./components/Demo/DemoOutput\";\n\nfunction App() {\n    const [showPara, setShowPara] = useState(false);\n    const [allowToggle, setAllowToggle] = useState(false);\n\n    console.log('App Running!!');\n\n    //save a function to reuse it without re-rendering\n    const toggleParagraphHandler = useCallback(() => {\n        if (allowToggle) {\n            setShowPara(prevShowPara => !prevShowPara);\n        }\n    }, []);\n\n    const allowToggleHandler = () => {\n        setAllowToggle(true);\n    }\n\n    return (\n        <div className=\"app\">\n            <h1>Hi there!</h1>\n            <DemoOutput show={showPara}/>\n            <Button onClick={allowToggleHandler}>Allow Toggling</Button>\n            <Button onClick={toggleParagraphHandler}>Show Paragraph!</Button>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,WAAW,EAAEC,QAAQ,QAAO,OAAO;AAElD,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAOC,UAAU,MAAM,8BAA8B;AAAC;AAEtD,SAASC,GAAG,GAAG;EAAA;EACX,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAErDQ,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;;EAE5B;EACA,MAAMC,sBAAsB,GAAGX,WAAW,CAAC,MAAM;IAC7C,IAAIO,WAAW,EAAE;MACbD,WAAW,CAACM,YAAY,IAAI,CAACA,YAAY,CAAC;IAC9C;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,kBAAkB,GAAG,MAAM;IAC7BL,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA,wBAChB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,eAClB,QAAC,UAAU;MAAC,IAAI,EAAEH;IAAS;MAAA;MAAA;MAAA;IAAA,QAAE,eAC7B,QAAC,MAAM;MAAC,OAAO,EAAEQ,kBAAmB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB,eAC5D,QAAC,MAAM;MAAC,OAAO,EAAEF,sBAAuB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAyB;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/D;AAEd;AAAC,GAzBQP,GAAG;AAAA,KAAHA,GAAG;AA2BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}