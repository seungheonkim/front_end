{"ast":null,"code":"var _jsxFileName = \"/Users/gimseungheon/Documents/front_project/React/Lecture/06-usereducer-starting-project/src/components/Login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"../UI/Input/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n  return {\n    value: '',\n    isValid: false\n  };\n};\nconst passwordReducer = (state, action) => {\n  switch (action.type) {\n    case 'PWD_INPUT':\n      return {\n        value: action.val,\n        isValid: action.val.trim().length > 6\n      };\n    case 'PWD_BLUR':\n      return {\n        value: state.value,\n        isValid: state.value.trim().length > 6\n      };\n    default:\n      return {\n        value: '',\n        isValid: false\n      };\n  }\n};\nconst Login = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: false\n  });\n  const authCtx = useContext(AuthContext);\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('Checking form validity!');\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n\n    // setFormIsValid(\n    //     event.target.value.includes('@') && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'PWD_INPUT',\n      val: event.target.value\n    });\n\n    // setFormIsValid(\n    //     emailState.isValid && event.target.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'PWD_BLUR'\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    authCtx.onLogin(emailState.value, passwordState.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: 'email',\n        label: 'E-mail'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"+cXg8KS1hS84rJ0L0LX6C3+jphg=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useContext","useEffect","useReducer","useState","Card","classes","Button","AuthContext","Input","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","authCtx","emailIsValid","passwordIsValid","console","log","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["/Users/gimseungheon/Documents/front_project/React/Lecture/06-usereducer-starting-project/src/components/Login/Login.js"],"sourcesContent":["import React, {useContext, useEffect, useReducer, useState} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"../UI/Input/Input\";\n\nconst emailReducer = (state, action) => {\n    if (action.type === 'USER_INPUT') {\n        return {value: action.val, isValid: action.val.includes('@')};\n    }\n\n    if (action.type === 'INPUT_BLUR') {\n        return {value: state.value, isValid: state.value.includes('@')};\n    }\n    return {value: '', isValid: false};\n};\n\nconst passwordReducer = (state, action) => {\n    switch (action.type) {\n        case 'PWD_INPUT':\n            return {\n                value: action.val,\n                isValid: action.val.trim().length > 6\n            }\n\n        case 'PWD_BLUR':\n            return {\n                value: state.value,\n                isValid: state.value.trim().length > 6\n            }\n\n        default:\n            return {\n                value: '',\n                isValid: false\n            }\n    }\n}\n\nconst Login = (props) => {\n    // const [enteredEmail, setEnteredEmail] = useState('');\n    // const [emailIsValid, setEmailIsValid] = useState();\n    // const [enteredPassword, setEnteredPassword] = useState('');\n    // const [passwordIsValid, setPasswordIsValid] = useState();\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    const [emailState, dispatchEmail] = useReducer(emailReducer, {\n        value: '',\n        isValid: false,\n    });\n\n    const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n        value: '',\n        isValid: false\n    });\n\n    const authCtx = useContext(AuthContext);\n\n    const {isValid: emailIsValid} = emailState;\n    const {isValid: passwordIsValid} = passwordState;\n\n    useEffect(() => {\n        console.log('EFFECT RUNNING');\n\n        return () => {\n            console.log('EFFECT CLEANUP');\n        };\n    }, []);\n\n    useEffect(() => {\n        const identifier = setTimeout(() => {\n            console.log('Checking form validity!');\n            setFormIsValid(\n                emailIsValid && passwordIsValid\n            );\n        }, 500);\n\n        return () => {\n            console.log('CLEANUP');\n            clearTimeout(identifier);\n        };\n    }, [emailIsValid, passwordIsValid]);\n\n    const emailChangeHandler = (event) => {\n        dispatchEmail({type: 'USER_INPUT', val: event.target.value});\n\n        // setFormIsValid(\n        //     event.target.value.includes('@') && passwordState.isValid\n        // );\n    };\n\n    const passwordChangeHandler = (event) => {\n        dispatchPassword({\n            type: 'PWD_INPUT',\n            val: event.target.value\n        });\n\n        // setFormIsValid(\n        //     emailState.isValid && event.target.value.trim().length > 6\n        // );\n    };\n\n    const validateEmailHandler = () => {\n        dispatchEmail({\n            type: 'INPUT_BLUR'\n        })\n    };\n\n    const validatePasswordHandler = () => {\n        dispatchPassword({\n            type: 'PWD_BLUR'\n        })\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        authCtx.onLogin(emailState.value, passwordState.value);\n    };\n\n    return (\n        <Card className={classes.login}>\n            <form onSubmit={submitHandler}>\n                <Input id={'email'} label={'E-mail'} />\n                <div\n                    className={`${classes.control} ${\n                        passwordState.isValid === false ? classes.invalid : ''\n                    }`}\n                >\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={passwordState.value}\n                        onChange={passwordChangeHandler}\n                        onBlur={validatePasswordHandler}\n                    />\n                </div>\n                <div className={classes.actions}>\n                    <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n                        Login\n                    </Button>\n                </div>\n            </form>\n        </Card>\n    );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,QAAO,OAAO;AAExE,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,KAAK,MAAM,mBAAmB;AAAC;AAEtC,MAAMC,YAAY,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACpC,IAAIA,MAAM,CAACC,IAAI,KAAK,YAAY,EAAE;IAC9B,OAAO;MAACC,KAAK,EAAEF,MAAM,CAACG,GAAG;MAAEC,OAAO,EAAEJ,MAAM,CAACG,GAAG,CAACE,QAAQ,CAAC,GAAG;IAAC,CAAC;EACjE;EAEA,IAAIL,MAAM,CAACC,IAAI,KAAK,YAAY,EAAE;IAC9B,OAAO;MAACC,KAAK,EAAEH,KAAK,CAACG,KAAK;MAAEE,OAAO,EAAEL,KAAK,CAACG,KAAK,CAACG,QAAQ,CAAC,GAAG;IAAC,CAAC;EACnE;EACA,OAAO;IAACH,KAAK,EAAE,EAAE;IAAEE,OAAO,EAAE;EAAK,CAAC;AACtC,CAAC;AAED,MAAME,eAAe,GAAG,CAACP,KAAK,EAAEC,MAAM,KAAK;EACvC,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,WAAW;MACZ,OAAO;QACHC,KAAK,EAAEF,MAAM,CAACG,GAAG;QACjBC,OAAO,EAAEJ,MAAM,CAACG,GAAG,CAACI,IAAI,EAAE,CAACC,MAAM,GAAG;MACxC,CAAC;IAEL,KAAK,UAAU;MACX,OAAO;QACHN,KAAK,EAAEH,KAAK,CAACG,KAAK;QAClBE,OAAO,EAAEL,KAAK,CAACG,KAAK,CAACK,IAAI,EAAE,CAACC,MAAM,GAAG;MACzC,CAAC;IAEL;MACI,OAAO;QACHN,KAAK,EAAE,EAAE;QACTE,OAAO,EAAE;MACb,CAAC;EAAA;AAEb,CAAC;AAED,MAAMK,KAAK,GAAIC,KAAK,IAAK;EAAA;EACrB;EACA;EACA;EACA;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,UAAU,CAACO,YAAY,EAAE;IACzDI,KAAK,EAAE,EAAE;IACTE,OAAO,EAAE;EACb,CAAC,CAAC;EAEF,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,UAAU,CAACe,eAAe,EAAE;IAClEJ,KAAK,EAAE,EAAE;IACTE,OAAO,EAAE;EACb,CAAC,CAAC;EAEF,MAAMa,OAAO,GAAG5B,UAAU,CAACO,WAAW,CAAC;EAEvC,MAAM;IAACQ,OAAO,EAAEc;EAAY,CAAC,GAAGL,UAAU;EAC1C,MAAM;IAACT,OAAO,EAAEe;EAAe,CAAC,GAAGJ,aAAa;EAEhDzB,SAAS,CAAC,MAAM;IACZ8B,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAE7B,OAAO,MAAM;MACTD,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IACjC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN/B,SAAS,CAAC,MAAM;IACZ,MAAMgC,UAAU,GAAGC,UAAU,CAAC,MAAM;MAChCH,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtCT,cAAc,CACVM,YAAY,IAAIC,eAAe,CAClC;IACL,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAM;MACTC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtBG,YAAY,CAACF,UAAU,CAAC;IAC5B,CAAC;EACL,CAAC,EAAE,CAACJ,YAAY,EAAEC,eAAe,CAAC,CAAC;EAEnC,MAAMM,kBAAkB,GAAIC,KAAK,IAAK;IAClCZ,aAAa,CAAC;MAACb,IAAI,EAAE,YAAY;MAAEE,GAAG,EAAEuB,KAAK,CAACC,MAAM,CAACzB;IAAK,CAAC,CAAC;;IAE5D;IACA;IACA;EACJ,CAAC;;EAED,MAAM0B,qBAAqB,GAAIF,KAAK,IAAK;IACrCV,gBAAgB,CAAC;MACbf,IAAI,EAAE,WAAW;MACjBE,GAAG,EAAEuB,KAAK,CAACC,MAAM,CAACzB;IACtB,CAAC,CAAC;;IAEF;IACA;IACA;EACJ,CAAC;;EAED,MAAM2B,oBAAoB,GAAG,MAAM;IAC/Bf,aAAa,CAAC;MACVb,IAAI,EAAE;IACV,CAAC,CAAC;EACN,CAAC;EAED,MAAM6B,uBAAuB,GAAG,MAAM;IAClCd,gBAAgB,CAAC;MACbf,IAAI,EAAE;IACV,CAAC,CAAC;EACN,CAAC;EAED,MAAM8B,aAAa,GAAIL,KAAK,IAAK;IAC7BA,KAAK,CAACM,cAAc,EAAE;IACtBf,OAAO,CAACgB,OAAO,CAACpB,UAAU,CAACX,KAAK,EAAEa,aAAa,CAACb,KAAK,CAAC;EAC1D,CAAC;EAED,oBACI,QAAC,IAAI;IAAC,SAAS,EAAER,OAAO,CAACwC,KAAM;IAAA,uBAC3B;MAAM,QAAQ,EAAEH,aAAc;MAAA,wBAC1B,QAAC,KAAK;QAAC,EAAE,EAAE,OAAQ;QAAC,KAAK,EAAE;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eACvC;QACI,SAAS,EAAG,GAAErC,OAAO,CAACyC,OAAQ,IAC1BpB,aAAa,CAACX,OAAO,KAAK,KAAK,GAAGV,OAAO,CAAC0C,OAAO,GAAG,EACvD,EAAE;QAAA,wBAEH;UAAO,OAAO,EAAC,UAAU;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB,eAC1C;UACI,IAAI,EAAC,UAAU;UACf,EAAE,EAAC,UAAU;UACb,KAAK,EAAErB,aAAa,CAACb,KAAM;UAC3B,QAAQ,EAAE0B,qBAAsB;UAChC,MAAM,EAAEE;QAAwB;UAAA;UAAA;UAAA;QAAA,QAClC;MAAA;QAAA;QAAA;QAAA;MAAA,QACA,eACN;QAAK,SAAS,EAAEpC,OAAO,CAAC2C,OAAQ;QAAA,uBAC5B,QAAC,MAAM;UAAC,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAE3C,OAAO,CAAC4C,GAAI;UAAC,QAAQ,EAAE,CAAC3B,WAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAE5D;QAAA;QAAA;QAAA;MAAA,QACP;IAAA;MAAA;MAAA;MAAA;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QACJ;AAEf,CAAC;AAAC,GA1GIF,KAAK;AAAA,KAALA,KAAK;AA4GX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}