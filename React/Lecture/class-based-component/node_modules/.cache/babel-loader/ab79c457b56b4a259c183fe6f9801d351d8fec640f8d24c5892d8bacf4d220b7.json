{"ast":null,"code":"var _jsxFileName = \"/Users/gimseungheon/Documents/front_project/React/Lecture/class-based-component/src/components/Users.js\";\nimport { Component } from 'react';\nimport User from './User';\nimport classes from './Users.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n    //이름도 state 여야 함\n    //state 는 무조건 객체형태!!\n    this.state = {\n      showUsers: true,\n      more: 'test'\n    };\n  }\n  toggleUsersHandler() {\n    //doesn't override the state\n    //덮어쓰지 않기 때문에 두번째 more 값은 살아있음\n    this.setState(curState => {\n      return {\n        showUsers: !curState.showUsers\n      };\n    });\n  }\n  render() {\n    const usersList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.props.users.map(user => /*#__PURE__*/_jsxDEV(User, {\n        name: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.users,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleUsersHandler.bind(this),\n        children: [this.state.showUsers ? 'Hide' : 'Show', \" Users\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), this.state.showUsers && usersList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n// const Users = () => {\n//     const [showUsers, setShowUsers] = useState(true);\n//\n//     const toggleUsersHandler = () => {\n//         setShowUsers((curState) => !curState);\n//     };\n//\n//     const usersList = (\n//         <ul>\n//             {DUMMY_USERS.map((user) => (\n//                 <User key={user.id} name={user.name}/>\n//             ))}\n//         </ul>\n//     );\n//\n//     return (\n//         <div className={classes.users}>\n//             <button onClick={toggleUsersHandler}>\n//                 {showUsers ? 'Hide' : 'Show'} Users\n//             </button>\n//             {showUsers && usersList}\n//         </div>\n//     );\n// };\n\nexport default Users;","map":{"version":3,"names":["Component","User","classes","Users","constructor","props","state","showUsers","more","toggleUsersHandler","setState","curState","render","usersList","users","map","user","name","id","bind"],"sources":["/Users/gimseungheon/Documents/front_project/React/Lecture/class-based-component/src/components/Users.js"],"sourcesContent":["import {Component} from 'react';\nimport User from './User';\n\nimport classes from './Users.module.css';\n\nclass Users extends Component {\n    constructor(props) {\n        super(props);\n        //이름도 state 여야 함\n        //state 는 무조건 객체형태!!\n        this.state = {\n            showUsers: true,\n            more: 'test'\n        };\n    }\n\n    toggleUsersHandler() {\n        //doesn't override the state\n        //덮어쓰지 않기 때문에 두번째 more 값은 살아있음\n        this.setState((curState) => {\n            return {showUsers: !curState.showUsers};\n        });\n    }\n\n    render() {\n        const usersList = (\n            <ul>\n                {this.props.users.map((user) => (\n                    <User key={user.id} name={user.name}/>\n                ))}\n            </ul>\n        );\n\n        return (\n            <div className={classes.users}>\n                <button onClick={this.toggleUsersHandler.bind(this)}>\n                    {this.state.showUsers ? 'Hide' : 'Show'} Users\n                </button>\n                {this.state.showUsers && usersList}\n            </div>\n        );\n    }\n}\n\n// const Users = () => {\n//     const [showUsers, setShowUsers] = useState(true);\n//\n//     const toggleUsersHandler = () => {\n//         setShowUsers((curState) => !curState);\n//     };\n//\n//     const usersList = (\n//         <ul>\n//             {DUMMY_USERS.map((user) => (\n//                 <User key={user.id} name={user.name}/>\n//             ))}\n//         </ul>\n//     );\n//\n//     return (\n//         <div className={classes.users}>\n//             <button onClick={toggleUsersHandler}>\n//                 {showUsers ? 'Hide' : 'Show'} Users\n//             </button>\n//             {showUsers && usersList}\n//         </div>\n//     );\n// };\n\nexport default Users;\n"],"mappings":";AAAA,SAAQA,SAAS,QAAO,OAAO;AAC/B,OAAOC,IAAI,MAAM,QAAQ;AAEzB,OAAOC,OAAO,MAAM,oBAAoB;AAAC;AAEzC,MAAMC,KAAK,SAASH,SAAS,CAAC;EAC1BI,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ;IACA;IACA,IAAI,CAACC,KAAK,GAAG;MACTC,SAAS,EAAE,IAAI;MACfC,IAAI,EAAE;IACV,CAAC;EACL;EAEAC,kBAAkB,GAAG;IACjB;IACA;IACA,IAAI,CAACC,QAAQ,CAAEC,QAAQ,IAAK;MACxB,OAAO;QAACJ,SAAS,EAAE,CAACI,QAAQ,CAACJ;MAAS,CAAC;IAC3C,CAAC,CAAC;EACN;EAEAK,MAAM,GAAG;IACL,MAAMC,SAAS,gBACX;MAAA,UACK,IAAI,CAACR,KAAK,CAACS,KAAK,CAACC,GAAG,CAAEC,IAAI,iBACvB,QAAC,IAAI;QAAe,IAAI,EAAEA,IAAI,CAACC;MAAK,GAAzBD,IAAI,CAACE,EAAE;QAAA;QAAA;QAAA;MAAA,QACrB;IAAC;MAAA;MAAA;MAAA;IAAA,QAET;IAED,oBACI;MAAK,SAAS,EAAEhB,OAAO,CAACY,KAAM;MAAA,wBAC1B;QAAQ,OAAO,EAAE,IAAI,CAACL,kBAAkB,CAACU,IAAI,CAAC,IAAI,CAAE;QAAA,WAC/C,IAAI,CAACb,KAAK,CAACC,SAAS,GAAG,MAAM,GAAG,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAClC,EACR,IAAI,CAACD,KAAK,CAACC,SAAS,IAAIM,SAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAChC;EAEd;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeV,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}